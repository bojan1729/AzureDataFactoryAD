{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-o2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load O2 Files To Stage_V6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File List",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [staging].[FileLoadDefinition]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fileRefID']"
										},
										"sink": {
											"name": "FileRefID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fileName']"
										},
										"sink": {
											"name": "FileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['importDate']"
										},
										"sink": {
											"name": "ImportDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileName": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_FileLoadDefinition",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Derived Column",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_DerivedColumn]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Filter On New Files",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Derived Column",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [staging].[FileLoadDefinition]\nWHERE FileRefID NOT IN (SELECT FileRefID FROM [staging].[FileLog])",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_FileLoadDefinition",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "File Iteration",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter On New Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter On New Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Zip to Csv",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_BLOB_Zip",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Clean NO - Clean YES",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Zip to Csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().ColumnsToClean, ''))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Whitespace Cleaning",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_CleanUp]",
													"storedProcedureParameters": {
														"ColumnArray": {
															"value": {
																"value": "@{item().ColumnsToClean}",
																"type": "Expression"
															},
															"type": "String"
														},
														"SourceTableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Load Stage - Cleaned",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Cleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Cleaned Succ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Whitespace Cleaning",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@if(equals(item().FileType,7), activity('Load Stage - Cleaned').output.rowsCopied, sub(activity('Load Stage - Cleaned').output.rowsCopied, 1))",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Cleaned",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Cleaned Fail",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Cleaned').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Cleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Load Stage - Uncleaned",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Uncleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Uncleaned Succ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@if(equals(item().FileType,7), activity('Load Stage - Uncleaned').output.rowsCopied, sub(activity('Load Stage - Uncleaned').output.rowsCopied, 1))",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Uncleaned",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Uncleaned Fail",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Uncleaned').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Uncleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "NULLRow  RecordID RecordTime",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Clean NO - Clean YES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_HashKey]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TableName": {
												"value": {
													"value": "@{concat('stg_', item().SinkTable)}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@{item().SinkSchema}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Delete CSV",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "NULLRow  RecordID RecordTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_BLOB_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "Check Seq No - Branch Succ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Iteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check Seq No - Branch Fail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Iteration",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"PPL_ImportDate": {
						"type": "string"
					},
					"PPL_RunID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-18T17:03:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load datastore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Datastore Test",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "pin.usp_LoadSubscriberCCBar",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Generic",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"folder": {
					"name": "Test1"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PICDR Load Datastore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File Load Definition",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [staging].[FileLoadDefinition]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fileRefID']"
										},
										"sink": {
											"name": "FileRefID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fileName']"
										},
										"sink": {
											"name": "FileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['importDate']"
										},
										"sink": {
											"name": "ImportDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileList": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Derived Column",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Load Definition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_DerivedColumn]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Filter On New Files",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Derived Column",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [staging].[FileLoadDefinition]\nWHERE FileRefID NOT IN (SELECT FileRefID FROM [staging].[FileLog])",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "File Iteration",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter On New Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter On New Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Zip to Csv",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Zip File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_BLOB_PICDR_ZipSource",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_PICDR_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Clean NO - Clean YES",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Zip to Csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().ColumnsToClean, ''))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Whitespace Cleaning",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_CleanUp]",
													"storedProcedureParameters": {
														"ColumnArray": {
															"value": {
																"value": "@{item().ColumnsToClean}",
																"type": "Expression"
															},
															"type": "String"
														},
														"SourceTableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Load Stage - Cleaned",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Cleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_PICDR_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_PICDR_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Cleaned Succ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Whitespace Cleaning",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@if(equals(item().FileType,7), activity('Load Stage - Cleaned').output.rowsCopied, sub(activity('Load Stage - Cleaned').output.rowsCopied, 1))",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Cleaned",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Cleaned Fail",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Cleaned').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Cleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Load Stage - Uncleaned",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Uncleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_PICDR_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_PICDR_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Uncleaned Succ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@if(equals(item().FileType,7), activity('Load Stage - Uncleaned').output.rowsCopied, sub(activity('Load Stage - Uncleaned').output.rowsCopied, 1))",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Uncleaned",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Uncleaned Fail",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Uncleaned').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Uncleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "NULLRow  RecordID RecordTime",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Clean NO - Clean YES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_HashKey]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TableName": {
												"value": {
													"value": "@{concat('stg_', item().SinkTable)}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@{item().SinkSchema}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Delete CSV",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "NULLRow  RecordID RecordTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_BLOB_PICDR_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Get Zip File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_HTTP_PICDR_FileRef",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileRef": {
													"value": "@{item().FileRefID}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_PICDR_ZipSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert File Log - Get Zip Fail",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Zip File",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_InsertFileLog]",
										"storedProcedureParameters": {
											"ComponentName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Get Zip File').output.errors[0].Message}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileRefID": {
												"value": {
													"value": "@{item().FileRefID}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileSeqno": {
												"value": {
													"value": "@{item().FileSeqNo}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ImportDate": {
												"value": {
													"value": "@{item().ImportDate}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"InsertRows": {
												"value": {
													"value": "0",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"InsertTime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().parameters.PPL_RunID",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Check Seq No - Branch Succ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Iteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check Seq No - Branch Fail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Iteration",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get File List",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_REST_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_ImportDate": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileList": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PPL_ImportDate": {
						"type": "string"
					},
					"PPL_RunID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-18T17:03:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unzip To Sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip To SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "\"Group Code\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Group_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Corporate Code\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Corporate_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Account No\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Account_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Agreement No\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Agreement_No",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Subscription Number\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription_Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Cost Centre\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost_Centre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Network Serial Number\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Network_Serial_Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Tariff\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tariff",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Call class\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Call_class",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Call class Description\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Call_class_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Call Landing date\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Call_Landing_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Dialed Number\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dialed_Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Call date\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Call_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Call time\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Call_time",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Bundled Call?\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bundled_Call",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"SP Billed Call Price\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SP_Billed_Call_Price",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Service\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Pre-Bundle Actual Duration\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pre_Bundle_Actual_Duration",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Pre-Bundled SP Value\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pre_Bundled_SP_Value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"SP Retail Call Price\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SP_Retail_Call_Price",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Discount Value\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Discount_Value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"SCD Country of Call Origin\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCD_Country_of_Call_Origin",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"SCD Call Direction\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCD_Call_Direction",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"SCD Networks Call Indicator\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SCD_Networks_Call_Indicator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"GPRS Destination\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GPRS_Destination",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"GPRS Product Code\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GPRS_Product_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Uplink Volume\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Uplink_Volume",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Downlink Volume\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Downlink_Volume",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "\"Number of Contexts\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number_of_Contexts",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Test1_BLOB_Unzip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Test1_SQL_DevDatahub",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Test1"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-09T17:19:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Zip To Unzip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Zip To Unzip",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "o2-test1//demo1.zip"
							},
							{
								"name": "Destination",
								"value": "o2-test1//demo1.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": "0",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "DS_Test1_BLOB_Zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Test1_BLOB_Unzip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Test1"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-09T17:19:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PICDR Load Datastore_V1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File Load Definition",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [staging].[FileLoadDefinition]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fileRefID']"
										},
										"sink": {
											"name": "FileRefID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fileName']"
										},
										"sink": {
											"name": "FileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['importDate']"
										},
										"sink": {
											"name": "ImportDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileList": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Derived Column",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Load Definition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_DerivedColumn]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Filter On New Files",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Derived Column",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [staging].[FileLoadDefinition]\nWHERE FileRefID NOT IN (SELECT FileRefID FROM [staging].[FileLog])",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "File Iteration",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter On New Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter On New Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Zip to Csv",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Zip File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_BLOB_PICDR_ZipSource",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_PICDR_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Clean NO - Clean YES",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Zip to Csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().ColumnsToClean, ''))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Whitespace Cleaning",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_CleanUp]",
													"storedProcedureParameters": {
														"ColumnArray": {
															"value": {
																"value": "@{item().ColumnsToClean}",
																"type": "Expression"
															},
															"type": "String"
														},
														"SourceTableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Load Stage - Cleaned",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Cleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_PICDR_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_PICDR_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Cleaned Succ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Whitespace Cleaning",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Cleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Cleaned",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Cleaned Fail",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Cleaned').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Cleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Load Stage - Uncleaned",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Uncleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_PICDR_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_PICDR_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Uncleaned Succ",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Uncleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Uncleaned",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Uncleaned Fail",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Uncleaned').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Uncleaned').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "NULLRow  RecordID RecordTime",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Clean NO - Clean YES",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_HashKey]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TableName": {
												"value": {
													"value": "@{concat('stg_', item().SinkTable)}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@{item().SinkSchema}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Delete CSV",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "NULLRow  RecordID RecordTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_BLOB_PICDR_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Get Zip File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_HTTP_PICDR_FileRef",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileRef": {
													"value": "@{item().FileRefID}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_PICDR_ZipSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Check Seq No - Branch Succ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Iteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check Seq No - Branch Fail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Iteration",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get File List",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_REST_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_ImportDate": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileList": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"PPL_ImportDate": {
						"type": "string"
					},
					"PPL_RunID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-18T17:03:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PICDR Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PICDR Load Datastore",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Create ETL Log Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PICDR Load Datastore",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PPL_ImportDate": {
									"value": "@pipeline().parameters.PPL_ImportDateMaster",
									"type": "Expression"
								},
								"PPL_RunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Create ETL Log Entry",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logging].[usp_InsertEtlLog]",
								"storedProcedureParameters": {
									"ComponentName": {
										"type": "String",
										"value": {
											"value": "PICDR Load Datastore",
											"type": "Expression"
										}
									},
									"DurationSeconds": {
										"type": "Int32",
										"value": null
									},
									"EndTime": {
										"type": "DateTime",
										"value": null
									},
									"ErrorMessage": {
										"type": "String",
										"value": null
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"PipelineRunID": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"StartTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Generic",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETL Log Entry Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PICDR Load Datastore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"DurationSeconds": {
									"value": null,
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('Create ETL Log Entry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETL Log Entry Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PICDR Load Datastore",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"DurationSeconds": {
									"value": null,
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "ERR Run - see FileLog",
										"type": "Expression"
									},
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('Create ETL Log Entry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"PPL_ImportDateMaster": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-19T06:29:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PICDR Load Datastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run O2 ETL Datahub')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load O2 Files To Stage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Create ETL Log Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load O2 Files To Stage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PPL_ImportDate": {
									"value": "@pipeline().parameters.PPL_ImportDateMaster",
									"type": "Expression"
								},
								"PPL_RunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Create ETL Log Entry",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logging].[usp_InsertEtlLog]",
								"storedProcedureParameters": {
									"ComponentName": {
										"type": "String",
										"value": {
											"value": "Load O2 Files To Stage",
											"type": "Expression"
										}
									},
									"DurationSeconds": {
										"type": "Int32",
										"value": null
									},
									"EndTime": {
										"type": "DateTime",
										"value": null
									},
									"ErrorMessage": {
										"type": "String",
										"value": null
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"PipelineRunID": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"StartTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Generic",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update ETL Log Entry Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load O2 Files To Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"DurationSeconds": {
									"value": null,
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('Create ETL Log Entry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETL Log Entry Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load O2 Files To Stage",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"DurationSeconds": {
									"value": null,
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "ERR Run - see FileLog",
										"type": "Expression"
									},
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('Create ETL Log Entry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"PPL_ImportDateMaster": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-19T06:29:30Z"
			},
			"dependsOn": []
		}
	]
}