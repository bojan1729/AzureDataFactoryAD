{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-o2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PICDR Load Datastore Parallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "All type sequential",
				"activities": [
					{
						"name": "File Load Definition",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [staging].[FileLoadDefinition]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['fileRefID']"
										},
										"sink": {
											"name": "FileRefID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fileName']"
										},
										"sink": {
											"name": "FileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['importDate']"
										},
										"sink": {
											"name": "ImportDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileList": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Derived Column",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File Load Definition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_DerivedColumn]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Filter On New Files Type 1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Derived Column",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM [staging].[FileLoadDefinition]\nWHERE FileType = 1 AND FileRefID NOT IN (SELECT FileRefID FROM [staging].[FileLog])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get File List",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_REST_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_ImportDate": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_PICDR_FileList",
								"type": "DatasetReference",
								"parameters": {
									"PDS_FileList": {
										"value": "@pipeline().parameters.PPL_ImportDate",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "File Iteration Type 1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter On New Files Type 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter On New Files Type 1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Zip to Csv1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Zip File1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_BLOB_PICDR_ZipSource",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_PICDR_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Clean NO - Clean YES1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Zip to Csv1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().ColumnsToClean, ''))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Whitespace Cleaning1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_CleanUp]",
													"storedProcedureParameters": {
														"ColumnArray": {
															"value": {
																"value": "@{item().ColumnsToClean}",
																"type": "Expression"
															},
															"type": "String"
														},
														"SourceTableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Load Stage - Cleaned1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Cleaned1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_PICDR_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_PICDR_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Cleaned Succ1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Whitespace Cleaning1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@if(equals(item().FileType,7), activity('Load Stage - Cleaned1').output.rowsCopied, sub(activity('Load Stage - Cleaned1').output.rowsCopied, 1))",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Cleaned1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Cleaned Fail1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Cleaned1",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Cleaned1').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Cleaned1').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Load Stage - Uncleaned1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Truncate Uncleaned1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_BLOB_PICDR_CsvSource",
														"type": "DatasetReference",
														"parameters": {
															"PDS_FileName": {
																"value": "@{item().FileName}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_SQL_PICDR_StageTable",
														"type": "DatasetReference",
														"parameters": {
															"PDS_TableSchema": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"PDS_TableName": {
																"value": "@{item().SinkTable}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert File Log - Uncleaned Succ1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": null,
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@if(equals(item().FileType,7), activity('Load Stage - Uncleaned1').output.rowsCopied, sub(activity('Load Stage - Uncleaned1').output.rowsCopied, 1))",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Truncate Uncleaned1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_Truncate]",
													"storedProcedureParameters": {
														"TableName": {
															"value": {
																"value": "@{concat('stg_', item().SinkTable)}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TableSchema": {
															"value": {
																"value": "@{item().SinkSchema}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Insert File Log - Uncleaned Fail1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Load Stage - Uncleaned1",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[staging].[usp_InsertFileLog]",
													"storedProcedureParameters": {
														"ComponentName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"ErrorMessage": {
															"value": {
																"value": "@{activity('Load Stage - Uncleaned1').output.errors[0].Message}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().FileName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileRefID": {
															"value": {
																"value": "@{item().FileRefID}",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileSeqno": {
															"value": {
																"value": "@{item().FileSeqNo}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"FileType": {
															"value": {
																"value": "@{item().FileType}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"ImportDate": {
															"value": {
																"value": "@{item().ImportDate}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"InsertRows": {
															"value": {
																"value": "@activity('Load Stage - Uncleaned1').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"InsertTime": {
															"value": {
																"value": "@utcnow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineRunID": {
															"value": {
																"value": "@pipeline().parameters.PPL_RunID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LN_SQL_DevDatahub",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "NULLRow  RecordID RecordTime1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Clean NO - Clean YES1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_HashKey]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TableName": {
												"value": {
													"value": "@{concat('stg_', item().SinkTable)}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@{item().SinkSchema}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Delete CSV1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "NULLRow  RecordID RecordTime1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_BLOB_PICDR_CsvSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Get Zip File1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_HTTP_PICDR_FileRef",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileRef": {
													"value": "@{item().FileRefID}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_PICDR_ZipSink",
											"type": "DatasetReference",
											"parameters": {
												"PDS_FileName": {
													"value": "@{item().FileName}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert File Log - Get Zip Fail1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Zip File1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_InsertFileLog]",
										"storedProcedureParameters": {
											"ComponentName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Get Zip File1').output.errors[0].Message}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileRefID": {
												"value": {
													"value": "@{item().FileRefID}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileSeqno": {
												"value": {
													"value": "@{item().FileSeqNo}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ImportDate": {
												"value": {
													"value": "@{item().ImportDate}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"InsertRows": {
												"value": {
													"value": "0",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"InsertTime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().parameters.PPL_RunID",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Insert File Log - Zip to Csv Fail1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Zip to Csv1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[staging].[usp_InsertFileLog]",
										"storedProcedureParameters": {
											"ComponentName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Zip to Csv1').output.errors[0].Message}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@{item().FileName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileRefID": {
												"value": {
													"value": "@{item().FileRefID}",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileSeqno": {
												"value": {
													"value": "@{item().FileSeqNo}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"FileType": {
												"value": {
													"value": "@{item().FileType}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ImportDate": {
												"value": {
													"value": "@{item().ImportDate}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"InsertRows": {
												"value": {
													"value": "0",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"InsertTime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().parameters.PPL_RunID",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load - SubscriberService",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Delete CSV1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[pin].[usp_LoadSubscriberService]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_SQL_Generic",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Datastore Log - 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load - SubscriberService",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[pin].[usp_DataStorePinLog]",
										"storedProcedureParameters": {
											"Actions": {
												"value": {
													"value": "@{activity('Load - SubscriberService').output.firstRow.actions}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ComponentName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Load - SubscriberService').output.firstRow.ErrorMessage}",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorNumber": {
												"value": {
													"value": "@{activity('Load - SubscriberService').output.firstRow.ErrorNumber}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"FileSeqno": {
												"value": {
													"value": "@{item().FileSeqNo}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ImportDate": {
												"value": {
													"value": "@{item().ImportDate}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Inserts": {
												"value": {
													"value": "@{activity('Load - SubscriberService').output.firstRow.inserts}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"InsertTime": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().parameters.PPL_RunID",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@{item().SinkTable}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Updates": {
												"value": {
													"value": "@{activity('Load - SubscriberService').output.firstRow.updates}",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LN_SQL_DevDatahub",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Filter On New Files Type 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Derived Column",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM [staging].[FileLoadDefinition]\nWHERE FileType = 1 AND FileRefID NOT IN (SELECT FileRefID FROM [staging].[FileLog])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_PICDR_LoadDefinition",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"parameters": {
					"PPL_ImportDate": {
						"type": "string"
					},
					"PPL_RunID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-18T17:03:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PICDR Main Run Parallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PICDR Load Datastore",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Create ETL Log Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PICDR Load Datastore",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PPL_ImportDate": {
									"value": "@pipeline().parameters.PPL_ImportDateMaster",
									"type": "Expression"
								},
								"PPL_RunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Create ETL Log Entry",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[logging].[usp_InsertEtlLog]",
								"storedProcedureParameters": {
									"ComponentName": {
										"type": "String",
										"value": {
											"value": "PICDR Load Datastore",
											"type": "Expression"
										}
									},
									"DurationSeconds": {
										"type": "Int32",
										"value": null
									},
									"EndTime": {
										"type": "DateTime",
										"value": null
									},
									"ErrorMessage": {
										"type": "String",
										"value": null
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"PipelineRunID": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"StartTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Generic",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Update ETL Log Entry Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PICDR Load Datastore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"DurationSeconds": {
									"value": null,
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('Create ETL Log Entry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update ETL Log Entry Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PICDR Load Datastore",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[logging].[usp_UpdateEtlLog]",
							"storedProcedureParameters": {
								"DurationSeconds": {
									"value": null,
									"type": "Int32"
								},
								"EndTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "ERR Run - see detailed log",
										"type": "Expression"
									},
									"type": "String"
								},
								"EtlLogId": {
									"value": {
										"value": "@activity('Create ETL Log Entry').output.firstRow.EtlLogId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check Seq No",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update ETL Log Entry Success",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Update ETL Log Entry Failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_CheckSeqNo]"
						},
						"linkedServiceName": {
							"referenceName": "LN_SQL_DevDatahub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"PPL_ImportDateMaster": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Dev_PICDR"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-19T06:29:30Z"
			},
			"dependsOn": []
		}
	]
}