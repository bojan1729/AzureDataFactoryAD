{
	"name": "PICDR Load Datastore",
	"properties": {
		"activities": [
			{
				"name": "File Load Definition",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get File List",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE [staging].[FileLoadDefinition]",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['fileRefID']"
								},
								"sink": {
									"name": "FileRefID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['fileName']"
								},
								"sink": {
									"name": "FileName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['importDate']"
								},
								"sink": {
									"name": "ImportDate",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "DS_BLOB_PICDR_FileList",
						"type": "DatasetReference",
						"parameters": {
							"PDS_FileList": {
								"value": "@pipeline().parameters.PPL_ImportDate",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_SQL_PICDR_LoadDefinition",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Derived Column",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "File Load Definition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[staging].[usp_DerivedColumn]"
				},
				"linkedServiceName": {
					"referenceName": "LN_SQL_DevDatahub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Filter On New Files",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Derived Column",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * FROM [staging].[FileLoadDefinition]\nWHERE FileRefID NOT IN (SELECT FileRefID FROM [staging].[FileLog])",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_PICDR_LoadDefinition",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "File Iteration",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter On New Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter On New Files').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Zip to Csv",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get Zip File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings",
										"compressionProperties": {
											"type": "ZipDeflateReadSettings",
											"preserveZipFileNameAsFolder": false
										}
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_BLOB_PICDR_ZipSource",
									"type": "DatasetReference",
									"parameters": {
										"PDS_FileName": {
											"value": "@{item().FileName}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_BLOB_PICDR_CsvSink",
									"type": "DatasetReference",
									"parameters": {
										"PDS_FileName": {
											"value": "@{item().FileName}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Clean NO - Clean YES",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Zip to Csv",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().ColumnsToClean, ''))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Whitespace Cleaning",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Load Stage - Cleaned",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_CleanUp]",
											"storedProcedureParameters": {
												"ColumnArray": {
													"value": {
														"value": "@{item().ColumnsToClean}",
														"type": "Expression"
													},
													"type": "String"
												},
												"SourceTableName": {
													"value": {
														"value": "@{concat('stg_', item().SinkTable)}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Load Stage - Cleaned",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Truncate Cleaned",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "AzureSqlSink"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_BLOB_PICDR_CsvSource",
												"type": "DatasetReference",
												"parameters": {
													"PDS_FileName": {
														"value": "@{item().FileName}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_SQL_PICDR_StageTable",
												"type": "DatasetReference",
												"parameters": {
													"PDS_TableSchema": {
														"value": "@{item().SinkSchema}",
														"type": "Expression"
													},
													"PDS_TableName": {
														"value": "@{item().SinkTable}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Insert File Log - Cleaned Succ",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Whitespace Cleaning",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_InsertFileLog]",
											"storedProcedureParameters": {
												"ComponentName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"ErrorMessage": {
													"value": null,
													"type": "String"
												},
												"FileName": {
													"value": {
														"value": "@{item().FileName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileRefID": {
													"value": {
														"value": "@{item().FileRefID}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileSeqno": {
													"value": {
														"value": "@{item().FileSeqNo}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"FileType": {
													"value": {
														"value": "@{item().FileType}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"ImportDate": {
													"value": {
														"value": "@{item().ImportDate}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"InsertRows": {
													"value": {
														"value": "@if(equals(item().FileType,7), activity('Load Stage - Cleaned').output.rowsCopied, sub(activity('Load Stage - Cleaned').output.rowsCopied, 1))",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"InsertTime": {
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().parameters.PPL_RunID",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Truncate Cleaned",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_Truncate]",
											"storedProcedureParameters": {
												"TableName": {
													"value": {
														"value": "@{concat('stg_', item().SinkTable)}",
														"type": "Expression"
													},
													"type": "String"
												},
												"TableSchema": {
													"value": {
														"value": "@{item().SinkSchema}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Insert File Log - Cleaned Fail",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Load Stage - Cleaned",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_InsertFileLog]",
											"storedProcedureParameters": {
												"ComponentName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"ErrorMessage": {
													"value": {
														"value": "@{activity('Load Stage - Cleaned').output.errors[0].Message}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileName": {
													"value": {
														"value": "@{item().FileName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileRefID": {
													"value": {
														"value": "@{item().FileRefID}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileSeqno": {
													"value": {
														"value": "@{item().FileSeqNo}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"FileType": {
													"value": {
														"value": "@{item().FileType}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"ImportDate": {
													"value": {
														"value": "@{item().ImportDate}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"InsertRows": {
													"value": {
														"value": "@activity('Load Stage - Cleaned').output.rowsCopied",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"InsertTime": {
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().parameters.PPL_RunID",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Load Stage - Uncleaned",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Truncate Uncleaned",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "AzureSqlSink"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_BLOB_PICDR_CsvSource",
												"type": "DatasetReference",
												"parameters": {
													"PDS_FileName": {
														"value": "@{item().FileName}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_SQL_PICDR_StageTable",
												"type": "DatasetReference",
												"parameters": {
													"PDS_TableSchema": {
														"value": "@{item().SinkSchema}",
														"type": "Expression"
													},
													"PDS_TableName": {
														"value": "@{item().SinkTable}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Insert File Log - Uncleaned Succ",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Load Stage - Uncleaned",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_InsertFileLog]",
											"storedProcedureParameters": {
												"ComponentName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"ErrorMessage": {
													"value": null,
													"type": "String"
												},
												"FileName": {
													"value": {
														"value": "@{item().FileName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileRefID": {
													"value": {
														"value": "@{item().FileRefID}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileSeqno": {
													"value": {
														"value": "@{item().FileSeqNo}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"FileType": {
													"value": {
														"value": "@{item().FileType}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"ImportDate": {
													"value": {
														"value": "@{item().ImportDate}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"InsertRows": {
													"value": {
														"value": "@if(equals(item().FileType,7), activity('Load Stage - Uncleaned').output.rowsCopied, sub(activity('Load Stage - Uncleaned').output.rowsCopied, 1))",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"InsertTime": {
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().parameters.PPL_RunID",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Truncate Uncleaned",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_Truncate]",
											"storedProcedureParameters": {
												"TableName": {
													"value": {
														"value": "@{concat('stg_', item().SinkTable)}",
														"type": "Expression"
													},
													"type": "String"
												},
												"TableSchema": {
													"value": {
														"value": "@{item().SinkSchema}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Insert File Log - Uncleaned Fail",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Load Stage - Uncleaned",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[staging].[usp_InsertFileLog]",
											"storedProcedureParameters": {
												"ComponentName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"ErrorMessage": {
													"value": {
														"value": "@{activity('Load Stage - Uncleaned').output.errors[0].Message}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileName": {
													"value": {
														"value": "@{item().FileName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileRefID": {
													"value": {
														"value": "@{item().FileRefID}",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileSeqno": {
													"value": {
														"value": "@{item().FileSeqNo}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"FileType": {
													"value": {
														"value": "@{item().FileType}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"ImportDate": {
													"value": {
														"value": "@{item().ImportDate}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"InsertRows": {
													"value": {
														"value": "@activity('Load Stage - Uncleaned').output.rowsCopied",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"InsertTime": {
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().parameters.PPL_RunID",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LN_SQL_DevDatahub",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "NULLRow  RecordID RecordTime",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Clean NO - Clean YES",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[staging].[usp_HashKey]",
								"storedProcedureParameters": {
									"FileName": {
										"value": {
											"value": "@{item().FileName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileType": {
										"value": {
											"value": "@{item().FileType}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"TableName": {
										"value": {
											"value": "@{concat('stg_', item().SinkTable)}",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableSchema": {
										"value": {
											"value": "@{item().SinkSchema}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LN_SQL_DevDatahub",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Delete CSV",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "NULLRow  RecordID RecordTime",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_BLOB_PICDR_CsvSink",
									"type": "DatasetReference",
									"parameters": {
										"PDS_FileName": {
											"value": "@{item().FileName}",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Get Zip File",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_HTTP_PICDR_FileRef",
									"type": "DatasetReference",
									"parameters": {
										"PDS_FileRef": {
											"value": "@{item().FileRefID}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_BLOB_PICDR_ZipSink",
									"type": "DatasetReference",
									"parameters": {
										"PDS_FileName": {
											"value": "@{item().FileName}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Insert File Log - Get Zip Fail",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Get Zip File",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[staging].[usp_InsertFileLog]",
								"storedProcedureParameters": {
									"ComponentName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "@{activity('Get Zip File').output.errors[0].Message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileName": {
										"value": {
											"value": "@{item().FileName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileRefID": {
										"value": {
											"value": "@{item().FileRefID}",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileSeqno": {
										"value": {
											"value": "@{item().FileSeqNo}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"FileType": {
										"value": {
											"value": "@{item().FileType}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ImportDate": {
										"value": {
											"value": "@{item().ImportDate}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"InsertRows": {
										"value": {
											"value": "@activity('Load Stage - Uncleaned').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"InsertTime": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().parameters.PPL_RunID",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LN_SQL_DevDatahub",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Check Seq No - Branch Succ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "File Iteration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[staging].[usp_CheckSeqNo]"
				},
				"linkedServiceName": {
					"referenceName": "LN_SQL_DevDatahub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Check Seq No - Branch Fail",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "File Iteration",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[staging].[usp_CheckSeqNo]"
				},
				"linkedServiceName": {
					"referenceName": "LN_SQL_DevDatahub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get File List",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_REST_PICDR_FileList",
						"type": "DatasetReference",
						"parameters": {
							"PDS_ImportDate": {
								"value": "@pipeline().parameters.PPL_ImportDate",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_BLOB_PICDR_FileList",
						"type": "DatasetReference",
						"parameters": {
							"PDS_FileList": {
								"value": "@pipeline().parameters.PPL_ImportDate",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"PPL_ImportDate": {
				"type": "string"
			},
			"PPL_RunID": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Dev_PICDR"
		},
		"annotations": [],
		"lastPublishTime": "2020-10-18T17:03:27Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}